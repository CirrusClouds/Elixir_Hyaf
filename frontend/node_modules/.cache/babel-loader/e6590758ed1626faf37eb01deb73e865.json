{"ast":null,"code":"var _jsxFileName = \"/home/jamie/mixnew/frontend/src/map.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorldMap = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const context = canvas.getContext('2d');\n    context.fillstyle = '#000000';\n    context.fillRect(0, 0, context.canvas_width, context.canvas_height);\n  }, []);\n  useEffect(() => {\n    async function fetchRecent() {\n      const resp = await fetch(\"http://localhost:4000/recent_postings\", {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      const recentData = await resp.json();\n      setData(recentData);\n    }\n\n    fetchRecent();\n    /* console.log(data);     */\n  }, [setData]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorldMap, \"UsDEZBjvkRiXJGGAjx5UlVrvYRs=\");\n\n_c = WorldMap;\nexport default WorldMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"sources":["/home/jamie/mixnew/frontend/src/map.tsx"],"names":["React","useState","useRef","useEffect","WorldMap","data","setData","canvasRef","canvas","current","context","getContext","fillstyle","fillRect","canvas_width","canvas_height","fetchRecent","resp","fetch","method","headers","recentData","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMM,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,QAAI,CAACD,MAAL,EAAa;AACb,UAAME,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACE,SAAR,GAAoB,SAApB;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBH,OAAO,CAACI,YAA/B,EAA6CJ,OAAO,CAACK,aAArD;AACD,GANQ,EAMN,EANM,CAAT;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,WAAf,GAA6B;AAC3B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAChEC,QAAAA,MAAM,EAAE,KADwD;AAEhEC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AACC,oBAAU;AADX;AAFuD,OAA1C,CAAxB;AAKA,YAAMC,UAAU,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAAzB;AACAhB,MAAAA,OAAO,CAACe,UAAD,CAAP;AACD;;AACDL,IAAAA,WAAW;AACX;AACD,GAZQ,EAYN,CAACV,OAAD,CAZM,CAAT;AAcA,sBACE;AAAQ,IAAA,GAAG,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CA9BD;;GAAMH,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst WorldMap = () => {\n  const [data, setData ] = useState([]);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return\n    const context = canvas.getContext('2d')\n    context.fillstyle = '#000000'\n    context.fillRect(0, 0, context.canvas_width, context.canvas_height)\n  }, [])\n\n  useEffect(() => {\n    async function fetchRecent() {\n      const resp = await fetch(\"http://localhost:4000/recent_postings\", {\n        method: \"GET\",\n        headers: {'Content-Type': 'application/json',\n                  'Accept': 'application/json'},\n      })\n      const recentData = await resp.json();\n      setData(recentData);\n    }\n    fetchRecent()\n    /* console.log(data);     */\n  }, [setData])\n\n  return (\n    <canvas ref={canvasRef} />\n  )\n\n}\n\nexport default WorldMap;\n"]},"metadata":{},"sourceType":"module"}